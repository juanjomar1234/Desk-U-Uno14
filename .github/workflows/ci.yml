name: CI/CD

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'README.md'
  pull_request:
    branches: [ master ]

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      needs_build: ${{ steps.filter.outputs.build }}
      needs_deploy: ${{ steps.filter.outputs.deploy }}
      needs_config: ${{ steps.filter.outputs.config }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            build:
              - 'src/**'
              - 'public/**'
              - 'package.json'
              - 'next.config.js'
              - 'tsconfig.json'
            deploy:
              - 'src/**'
              - 'prisma/**'
              - '.env*'
            config:
              - 'server.js'
              - 'ecosystem.config.js'
              - 'package.json'

  build:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.needs_build == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npx prisma generate
        
      - name: Build
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: .next
          path: .next
          retention-days: 1

  config:
    needs: check_changes
    if: ${{ needs.check_changes.outputs.needs_config == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create configuration files
        run: |
          # Crear .env
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" > .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "PORT=3000" >> .env

      - name: Upload config artifacts
        uses: actions/upload-artifact@v3
        with:
          name: config
          path: |
            .env
            server.js
            ecosystem.config.js
          retention-days: 1

  deploy:
    needs: [check_changes, build, config]
    if: |
      github.ref == 'refs/heads/master' && 
      (needs.check_changes.outputs.needs_deploy == 'true' || 
       needs.check_changes.outputs.needs_build == 'true' ||
       needs.check_changes.outputs.needs_config == 'true')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        if: needs.check_changes.outputs.needs_build == 'true'
        uses: actions/download-artifact@v3
        with:
          name: .next
          path: .next

      - name: Download config artifacts
        if: needs.check_changes.outputs.needs_config == 'true'
        uses: actions/download-artifact@v3
        with:
          name: config
          path: ./

      - name: Get changed files
        id: changed
        uses: jitterbit/get-changed-files@v1

      - name: Deploy .next if rebuilt
        if: needs.check_changes.outputs.needs_build == 'true'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 65002
          source: ".next"
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 0

      - name: Deploy changed files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 65002
          source: ${{ steps.changed.outputs.added_modified }}
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 0

      - name: Restart application
        if: needs.check_changes.outputs.needs_config == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 65002
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            pm2 reload ecosystem.config.js