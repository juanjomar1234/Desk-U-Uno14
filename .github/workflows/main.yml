name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Initialize npm in root
      run: |
        npm init -y
        npm install --legacy-peer-deps
    
    - name: Install Dependencies
      run: |
        for d in *-service/; do
          if [ -f "$d/package.json" ]; then
            echo "Installing dependencies for $d"
            cd $d
            npm install --legacy-peer-deps
            cd ..
          fi
        done
    
    - name: Debug npm
      if: failure()
      run: |
        echo "NPM Version:"
        npm -v
        echo "Node Version:"
        node -v
        echo "Package contents:"
        cat frontend-service/package.json
    
    - name: Start Services
      run: |
        # Crear directorio de logs primero
        mkdir -p logs
        touch logs/gateway.log logs/user.log logs/message.log logs/file.log
        
        chmod +x ./start_services.sh
        ./start_services.sh > logs/startup.log 2>&1
        
        # Mostrar procesos Node.js
        echo "Procesos Node.js activos:"
        ps aux | grep node
        
        # Mostrar puertos en uso
        echo "Puertos en uso:"
        netstat -tulpn | grep LISTEN
        
        # Esperar un momento para que los logs se generen
        sleep 5
        
        # Mostrar logs de servicios
        echo "Logs de servicios:"
        cat logs/*.log || true
    
    - name: Prepare Test Environment
      run: |
        mkdir -p logs
        touch logs/integration_tests.log
        chmod 666 logs/integration_tests.log
        # Verificar conectividad
        for port in 3000 3001 3002 3003; do
          echo "Verificando puerto $port:"
          curl -v http://localhost:$port/health || true
        done
    
    - name: Run Tests
      run: |
        chmod +x ./run_direct_tests.sh
        ./run_direct_tests.sh
    
    - name: Stop Services
      if: always()
      run: |
        chmod +x ./stop_services.sh
        ./stop_services.sh

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: SFTP Deploy
      uses: wlixcc/SFTP-Deploy-Action@v1.2.4
      with:
        username: 'u396608776'
        server: '147.93.54.226'
        port: 65002
        local_path: './*'
        remote_path: '${{ secrets.DEPLOY_PATH }}'
        password: '${{ secrets.SSH_PASSWORD }}'
        sftpArgs: '-o StrictHostKeyChecking=no'
    
    - name: Execute setup script
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 147.93.54.226
        username: u396608776
        password: ${{ secrets.SSH_PASSWORD }}
        port: 65002
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          chmod +x setup_server.sh
          ./setup_server.sh